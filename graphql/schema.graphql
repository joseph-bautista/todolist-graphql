
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type User {
    id: ID!
    name: String!
    email: String!
    role: String!
    password: String!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
    activities: [Activity!] @hasMany
}

type Activity {
  id: ID!
  name: String!
  description: String
  completed_date: DateTime
  is_completed: Boolean!
  user_id: ID
  created_at: DateTime!
  updated_at: DateTime!
  user: User @belongsTo
}

type Query {
    user(
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    users(
      name: String @where(operator: "like")
      role: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    activity(
      id: ID @eq
    ): Activity @find

    activities(
      name: String @where(operator: "like")
      is_completed: Boolean @where(operator: "like")
      user_id: ID @where(operator: "like")
    ): [Activity!]! @paginate(defaultCount:10) 
}

type Mutation {
  createUser(
    name: String
    email: String
    password: String
    role: String
  ): User! @create

  updateUser(
    id: ID! @whereKey
    name: String
    email: String
    password: String
    role: String
  ): User! @update

  deleteUser(
    id: ID! @whereKey
  ): User @delete

  createActivity(
    name: String
    email: String
    password: String
    role: String
  ): Activity! @create

  updateActivity(
    id: ID! @whereKey
    name: String
    email: String
    password: String
    role: String
  ): Activity! @update

  deleteActivity(
    id: ID! @whereKey
  ): Activity @delete
  
}